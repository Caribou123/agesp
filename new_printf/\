#include "ft_printf.h"

int	is_dioux(const char *format, int i)
{
	if (format[i] == 'd' || format[i] == 'i' || format[i] == 'u'
			|| format[i] == 'o'
			|| format[i] == 'x' || format[i] == 'X')
		return (1);
	return (0);
}

int	is_ok_flag(const char *format, int i)
{
	if (format[i] == 'd'
			|| format[i] == 'i' || format[i] == 's'
			|| format[i] == 'c' || format[i] == 'p'
			|| format[i] == 'u' || format[i] == 'o'
			|| format[i] == 'x' || format[i] == 'X'
			|| format[i] == '%')
		return (1);
	return (0);
}

int	is_ok_conv(const char *format, int i)
{
	return (0);
}

int	correct_flags(const char *format, int i)
{
	if (format[i] && !(is_ok_flag(format, i)))
	{
		if (ft_isdigit(format[i]))
		{
			while (format[i] && ft_isdigit(format[i]))
				i++;
			if (!format[i] || !(is_dioux(format, i) || format[i] == '.'))
				return (0);
			if (format[i] == '.')
				return (correct_flags(format, i));
			return (i);
		}
		if (format[i] == '.')
		{
			while (format[i] && ft_isdigit(format[i]))
				i++;
			if (!format[i] || !(is_dioux(format, i)))
				return (0);
			return (i);
		}
		if ((format[i] == '+' || format[i] == '-' || format[i] == ' ')
				&& format[i + 1] && (is_dioux(format, i + 1)
					|| format[i + 1] == '.'
					|| ft_isdigit(format[i + 1])))
			return (correct_flags(format, i + 1));
	}
	if (format[i])
		return (i + 1);
	else
		return (0);
}

int	are_flags_correct(const char *format)
{
	int	i;
	int	flag;

	i = 0;
	flag = 0;
	while (format[i + 1])
	{
		if (format[i++] == '%')
		{
			if (!(flag = correct_flags(format, i)))
				return (0);
			i = flag;
		}
		i++;
	}
	return (1);
}

int	ft_printf(const char *restrict format, ...)
{
	va_list		ap;
	int		i;

	i = 0;
	if (!(are_flags_correct(format)))
		return (0);
	//make_plist(format, list);
	//return (print_list(&ap));
	return (1);
}

int	main()
{
	printf("%d\n", ft_printf("%q", 12));
}
